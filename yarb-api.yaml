openapi: 3.0.0
info:
  title: YARB API
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /auth/login:
    post:
      summary: login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginData'
        '400':
          description: 'Bad Request: Invalid input'
        '401':
          description: Unauthorized
        '500':
          $ref: '#/components/responses/500InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        description: ''
      description: Create token by user credentials and get userId
      operationId: login
  /auth/token:
    get:
      summary: refreshToken
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginData'
        '401':
          description: Unauthorized
        '500':
          $ref: '#/components/responses/500InternalServerError'
      description: Refresh a token and get userId
      operationId: refreshToken
      security:
        - bearerAuth: []
  /boards:
    get:
      summary: getBoardsByOwner
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Board'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          $ref: '#/components/responses/500InternalServerError'
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: integer
          in: query
          name: userId
          required: true
      operationId: getBoardsByOwner
      description: Get boards by owner
    post:
      summary: createBoard
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedResponse'
          links:
            GetBoard:
              operationId: getBoard
              parameters:
                boardId: $response.body#/id

        '401':
          description: Unauthorized
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBoard'
      description: Create new board
      operationId: createBoard
  /users:
    post:
      summary: createUser
      responses:
        '204':
          description: No Content
        '409':
          description: "Conflict: username already existing"
        '500':
          $ref: '#/components/responses/500InternalServerError'
      description: Create new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      operationId: createUser
    parameters: []
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
    get:
      summary: getUser
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          $ref: '#/components/responses/500InternalServerError'
      description: Get user
      operationId: getUser
      security:
        - bearerAuth: []
  '/boards/{boardId}':
    parameters:
      - name: boardId
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: getBoard
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
        '404':
          description: Not Found
        '500':
          $ref: '#/components/responses/500InternalServerError'
      operationId: getBoard
      description: get board by Id
  '/notes/{noteId}':
    parameters:
      - name: noteId
        in: path
        required: true
        schema:
          type: integer
    patch:
      summary: updateNote
      operationId: updateNote
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '500':
          $ref: '#/components/responses/500InternalServerError'
      description: Update a note
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBoardNote'
    delete:
      summary: deleteNote
      operationId: deleteNote
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '500':
          $ref: '#/components/responses/500InternalServerError'
      description: Delete a note
  '/notes/{noteId}/vote':
    parameters:
      - name: noteId
        in: path
        required: true
        schema:
          type: integer
    post:
      summary: postVote
      operationId: postVote
      responses: 
        '201':
          description: OK
        '404':
          description: Not Found
      description: Add one vote for the note
    delete:
      summary: deleteVote
      operationId: deleteVote
      responses: 
        '201':
          description: OK
        '404':
          description: Not Found
        '409':
          description: "Conflict: Note has no votes to delete"
      description: Delete one vote for the note
  /notes:
    post:
      summary: createNote
      operationId: createNote
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedResponse'
        '404':
          description: BoardColumn Not Found
        '500':
          $ref: '#/components/responses/500InternalServerError'
      description: Create a new note
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBoardNote'
components:
  schemas:
    LoginData:
      title: LoginData
      description: ''
      type: object
      properties:
        token:
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
        - token
        - user
    Password:
      type: string
      title: Password
      minLength: 6
      maxLength: 20
    User:
      title: User
      type: object
      properties:
        id:
          type: integer
        username:
          $ref: '#/components/schemas/UserName'
      required:
        - id
        - username
    UserCredentials:
      title: UserCredentials
      type: object
      properties:
        username:
          $ref: '#/components/schemas/UserName'
        password:
          $ref: '#/components/schemas/Password'
      required:
        - username
        - password
    UserName:
      type: string
      pattern: "^[^\\sA-Z]+$"
      maxLength: 20
      minLength: 4
      title: UserName
    BoardNote:
      title: BoardNote
      required:
        - id
        - creationDate
        - content
        - votes
      properties:
        id:
          type: integer
        creationDate:
          type: string
          format: date-time
        content:
          type: string
        votes:
          type: integer
      type: object
    BoardColumn:
      title: BoardColumn
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        notes:
          type: array
          items:
            $ref: '#/components/schemas/BoardNote'
      required:
        - id
        - name
        - notes
    Board:
      title: Board
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        creationDate:
          type: string
          format: date-time
        columns:
          type: array
          maxItems: 5
          minItems: 2
          items:
            $ref: '#/components/schemas/BoardColumn'
      required:
        - id
        - name
        - creationDate
        - columns
    CreateBoardNote:
      title: CreateBoardNote
      required:
        - content
        - boardColumnId
      properties:
        content:
          type: string
        boardColumnId:
          type: integer
      type: object
    UpdateBoardNote:
      title: UpdateBoardNote
      required:
        - content
      properties:
        content:
          type: string
      type: object
    CreateBoard:
      title: create-board
      required:
        - name
        - columnNames
      properties:
        name:
          type: string
          minLength: 3
        columnNames:
          type: array
          uniqueItems: true
          maxItems: 5
          minItems: 2
          items:
            type: string
      type: object
    InternalErrorMessage:
      title: InternalErrorMessage
      required:
        - exceptionId
      properties:
        exceptionId:
          type: string
      type: object
    CreatedResponse:
      title: CreatedResponse
      type: object
      properties:
        id:
          type: integer

  responses:
    500InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalErrorMessage'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: Bearer
      description: ''
